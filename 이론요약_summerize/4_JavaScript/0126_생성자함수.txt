2021-01-26 ⓚ금경용
<소스페이지에 가시면 더욱 상세히 보실 수 있습니다>

★생성자 함수
	function 생성자함수명(속성명들) {
        	    ...
    	 }
       	var 객체명 = new 생성자함수명(속성값들); 
	new 키워드로 객체를 생성하므로 생성자함수. 생성자 함수로 만든 객체를 객체 또는 인스턴스라 부른다. 
	해당 객체가 어떠한 생성자 함수로 생성됐는지 확인할 때 instanceof 키워드를 사용할 수 있다. 
	function Student(name,kor,eng) {
            this.name = name;  // this는 현재 객체의 속성을 가리킬 때 씀, name은 파라미터로 받은 지역변수
	this.kor = kor;
            this.eng = eng;
	this.toString = function () { return this.name + '\t' + this.kor+ '\t' + this.eng; };
        	}


★프로토타입
	생성자 함수로 생성된 객체가 공통으로 가지는 공간.
	※함수안에 자동으로 만들어지는 배열 arguments와 마찬가지로 자바스크립트의 모든 함수는 prototype 객체를 갖는다.
	Student.prototype.getSum = function () { return this.kor + this.eng ; };

★new 키워드
	new 키워드로 함수를 호출하면 객체를 위한 공간을 만들고 this 키워드가 해당 공간을 의미한다. 
	그렇지 않는 경우, 일반적으로 this 키워드를 사용하면 window 객체를 나타낸다. Window 객체에 속성을 추가한 것이 된다.
	<script>
   	     function Constructor(value) {
    	        this.value = value;
   	     }
    	    var constructor = new Constructor('Hello');
   	     alert(constructor.value);
 	 </script>

★캡슐화
	만일의 상황을 대비해서 특정 속성이나 메서드를 사용자가 바로 사용할 수 없게 막는 기술이다. 
	숨겨 놓은 특정 속성은 getter와 setter를 이용하여 간접적으로 접근할 수 있다.

        function Rectangle(w, h) {
            var width = w;
            var height = h;
            this.getWidth = function () { return width; };
            this.getHeight = function () { return height; };
            };

★상속  
	기존의 생성자 함수나 객체를 기반으로 새로운 생성자 함수나 객체를 쉽게 만드는 것 
	자바 스크립트에서 정확한 상속 방법은 없습니다. 
	상속이 됐다 안 됐다의 기준은 instanceof을 이용하여 true이면 상속되었다고 판단한다.
	
 	function Square(length) {
              this.base = Rectangle;
              this.base(length, length);
       	  }
       	  Square.prototype = Rectangle.prototype;

	

 
	